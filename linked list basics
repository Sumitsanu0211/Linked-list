#include <iostream>
using namespace std;
class Node{
    public:
    int data;
    Node* next;
    Node(int val){
        data = val;
        next = NULL;
    }
    ~Node(){
        int value = this-> data;
        if(this-> next!= NULL){
            delete next;
        }
        cout<<"Memory is free for node with data"<<value<<endl;
    }
};

void insertAtposition(Node* &head, Node* &tail, int pos, int d){
    if(pos==1){
        Node* temp = new Node(d);
        temp-> next = head;
        head = temp;
        return;
    } else{

        Node* temp1 = head;
        int count = 1;
        while(count<pos-1){
            temp1 = temp1-> next;
            count++;
        }
        if(temp1-> next==NULL){
            Node*temp2 =new Node(d);
           tail-> next = temp2;
           tail = tail-> next;
           return;
        }//
        Node* nodeToinsert = new Node(d);
        nodeToinsert-> next = temp1-> next;
        temp1-> next = nodeToinsert;
    }
    
    
}
void deleteANode(Node* &head, int pos){
    if(pos==1){
        Node* temp=head;
            head=head-> next;
            temp-> next = NULL;
            delete temp;
        
    } else{
    Node* prev=NULL;
    Node* curr=head;
    int count = 1;
    while(count<pos){
        prev=curr;
        curr=curr-> next;
        count++;
    }
    prev-> next=curr-> next;
    curr-> next = NULL;
    delete curr;
    }
    
}
void print(Node* head){
    Node* temp3 = head;
    while(temp3!=NULL){
        cout<<temp3-> data<<" ";
        temp3 = temp3-> next;
    } cout<<endl;
}

int search(Node* &head, int key){
    Node* temp = head;
    int count = 1;
    while(temp!=NULL){
        if(temp-> data==key){
            return count;
        }
        count++;
        temp=temp-> next;
    }
    return -1;
}
int main(){
    Node* node1 = new Node(10);
    Node* head = node1;
    Node* tail = node1;
    print(head);
    insertAtposition(head,tail, 1, 32);
    print(head);
    insertAtposition(head,tail, 3, 34);
    print(head);
    cout<<"tail is"<<tail->data<<endl;
    cout<<"head is"<<head-> data<<endl;
    deleteANode(head, 1);
    print(head);
    insertAtposition(head, tail, 3, 45);
    insertAtposition(head, tail, 4, 46);
    print(head);
    deleteANode(head, 3);
    print(head);
   cout<<search(head,46);
    return 0;
}
